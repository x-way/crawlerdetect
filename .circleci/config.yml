version: 2
workflows:
  version: 2
  build:
    jobs:
      - build-1.18
      - build-1.19
  scheduled:
    triggers:
      - schedule:
          cron: "1 2 * * 5"
          filters:
            branches:
              only:
                - master
    jobs:
      - build-1.18
      - build-1.19

jobs:
  build-latest: &build-template
    docker:
      - image: cimg/go

    steps:
      - checkout
      - run: uname -a
      - run: go version
      - run: go env
      - run: go vet -v ./...
      - run:
          name: golint
          command: |
                    go install golang.org/x/lint/golint@latest
                    golint -set_exit_status ./...
      - run:
          name: staticcheck.io
          command: |
                    go install honnef.co/go/tools/cmd/staticcheck@latest
                    staticcheck -checks all ./...
      - run:
          name: Check gofumpt formatting
          command: |
                    go install mvdan.cc/gofumpt@latest
                    gofumpt -d .
                    [ -z "$(gofumpt -l .)" ]
      - run:
          name: Run go tests with -race
          command: |
                    go test -run=TestRegexpUpdate -race ./...
      - run:
          name: Run go tests
          environment:
            GOTESTSUM_JUNITFILE: /tmp/test-reports/gotests/junit.xml
          command: |
                    mkdir -p /tmp/test-reports/gotests
                    PATH=/tmp/sbin:$PATH gotestsum
      - run:
          name: Create coverage report
          command: |
                    mkdir -p /tmp/test-artifacts
                    PATH=/tmp/sbin:$PATH go test -coverprofile=coverage.txt -covermode=atomic
                    go tool cover -html=coverage.txt -o coverage.html
                    mv coverage.html /tmp/test-artifacts
      - run:
          name: Codacy coverage upload
          command: |
                    go install github.com/schrej/godacov@latest
                    godacov -t $CODACY_PROJECT_TOKEN -r coverage.txt -c $CIRCLE_SHA1
      - store_test_results:
          path: /tmp/test-reports
      - store_artifacts:
          path: /tmp/test-artifacts

  build-1.18:
    <<: *build-template
    docker:
      - image: cimg/go:1.18

  build-1.19:
    <<: *build-template
    docker:
      - image: cimg/go:1.19
